/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _INTERFACE_H_RPCGEN
#define _INTERFACE_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef char *directoryName_t;

typedef struct directoryNode *fileList_t;

struct directoryNode {
	directoryName_t name;
	fileList_t next;
};
typedef struct directoryNode directoryNode;

struct dir_res {
	int err;
	union {
		fileList_t list;
	} dir_res_u;
};
typedef struct dir_res dir_res;

typedef int elements_t[100];

typedef struct matrices matrix_t;

struct matrices {
	elements_t elements;
	int num_of_matrices;
	int m;
	int n;
};
typedef struct matrices matrices;

typedef char *line_t;

typedef struct text text_t;

struct text {
	line_t elements;
	int num_of_chars;
};
typedef struct text text;

typedef char *data_t;

typedef struct set dataSet_t;

struct set {
	data_t elements[100];
	int num_of_sets;
	int first_len;
	int second_len;
};
typedef struct set set;

#define INTERFACE_PROGS 0x21111111
#define DIR_PROG_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define READ_DIR 1
extern  dir_res * read_dir_1(directoryName_t *, CLIENT *);
extern  dir_res * read_dir_1_svc(directoryName_t *, struct svc_req *);
#define ADD_MATRIX 2
extern  matrix_t * add_matrix_1(matrix_t *, CLIENT *);
extern  matrix_t * add_matrix_1_svc(matrix_t *, struct svc_req *);
#define REVERSE_ECHO 3
extern  text_t * reverse_echo_1(text_t *, CLIENT *);
extern  text_t * reverse_echo_1_svc(text_t *, struct svc_req *);
#define MERGE_LIST 4
extern  dataSet_t * merge_list_1(dataSet_t *, CLIENT *);
extern  dataSet_t * merge_list_1_svc(dataSet_t *, struct svc_req *);
#define GET_TIME 5
extern  u_int * get_time_1(void *, CLIENT *);
extern  u_int * get_time_1_svc(void *, struct svc_req *);
extern int interface_progs_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define READ_DIR 1
extern  dir_res * read_dir_1();
extern  dir_res * read_dir_1_svc();
#define ADD_MATRIX 2
extern  matrix_t * add_matrix_1();
extern  matrix_t * add_matrix_1_svc();
#define REVERSE_ECHO 3
extern  text_t * reverse_echo_1();
extern  text_t * reverse_echo_1_svc();
#define MERGE_LIST 4
extern  dataSet_t * merge_list_1();
extern  dataSet_t * merge_list_1_svc();
#define GET_TIME 5
extern  u_int * get_time_1();
extern  u_int * get_time_1_svc();
extern int interface_progs_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_directoryName_t (XDR *, directoryName_t*);
extern  bool_t xdr_fileList_t (XDR *, fileList_t*);
extern  bool_t xdr_directoryNode (XDR *, directoryNode*);
extern  bool_t xdr_dir_res (XDR *, dir_res*);
extern  bool_t xdr_elements_t (XDR *, elements_t);
extern  bool_t xdr_matrix_t (XDR *, matrix_t*);
extern  bool_t xdr_matrices (XDR *, matrices*);
extern  bool_t xdr_line_t (XDR *, line_t*);
extern  bool_t xdr_text_t (XDR *, text_t*);
extern  bool_t xdr_text (XDR *, text*);
extern  bool_t xdr_data_t (XDR *, data_t*);
extern  bool_t xdr_dataSet_t (XDR *, dataSet_t*);
extern  bool_t xdr_set (XDR *, set*);

#else /* K&R C */
extern bool_t xdr_directoryName_t ();
extern bool_t xdr_fileList_t ();
extern bool_t xdr_directoryNode ();
extern bool_t xdr_dir_res ();
extern bool_t xdr_elements_t ();
extern bool_t xdr_matrix_t ();
extern bool_t xdr_matrices ();
extern bool_t xdr_line_t ();
extern bool_t xdr_text_t ();
extern bool_t xdr_text ();
extern bool_t xdr_data_t ();
extern bool_t xdr_dataSet_t ();
extern bool_t xdr_set ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_INTERFACE_H_RPCGEN */
